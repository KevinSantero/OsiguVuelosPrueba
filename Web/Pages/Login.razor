@page "/auth/login"

@using Blazored.SessionStorage
@using Blazored.Toast.Services;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Net;
@using Web.Extencion;
@using Web.Identity;
@inject ISessionStorageService SessionStorage
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService toastService


<EditForm class="new-blog-form" Model="@authRequest" OnValidSubmit="HandleValidSubmit">

	<section class="vh-100" style="background-color: #508bfc;">
		<div class="container py-5 h-100">
			<div class="row d-flex justify-content-center align-items-center h-100">
				<div class="col-12 col-md-8 col-lg-6 col-xl-5">
					<div class="card shadow-2-strong" style="border-radius: 1rem;">
						<div class="card-body p-5 text-center">

							<h3 class="mb-5">Programa tu vuelo!</h3>

							<div class="form-outline mb-4">
								<label class="form-label">Nombre de usuario</label>
								<input type="text" @bind="authRequest!.NombreUsuario" class="form-control form-control-lg" id="username" placeholder="Username">
								
							</div>

							<div class="form-outline mb-4">
								<label class="form-label" >Contraseña</label>

								<input type="password" @bind="authRequest!.Contrasena" class="form-control" id="password"
									   placeholder="Password">
							</div>

							<button class="btn btn-primary btn-lg btn-block" type="submit">Login</button>

						
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>



</EditForm>

@code {
	private AuthRequest? authRequest = new AuthRequest();
	private ResultResponse<string> authResponse = new();
	private async void HandleValidSubmit()
	{
		try
		{
			authResponse = await AuthService.Login(authRequest!);

			if (authResponse != null && authResponse.isSuccess)
			{
				await SessionStorage.SetItemAsync("token", authResponse.value);
				((CustomAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser(authResponse.value!);
				NavigationManager.NavigateTo("/listaVuelos/1");
			}
			else
			{
				toastService.ShowError(authResponse.error.name);
			}
		}
		catch (WebException ex)
		{
			toastService.ShowError("Error en la connecion");
		}
		catch (Exception)
		{
			toastService.ShowError("Puede que se haya ocurrido un error en el servidor");
		}

	}
}