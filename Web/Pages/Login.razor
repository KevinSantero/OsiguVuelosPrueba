@page "/auth/login"

@using Blazored.SessionStorage
@using Microsoft.AspNetCore.Components.Authorization;
@using Web.Extencion;
@using Web.Identity;
@inject ISessionStorageService SessionStorage
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider 

<h3>Login</h3>
<EditForm class="new-blog-form" Model="@authRequest" OnValidSubmit="HandleValidSubmit">
    <div class="form-group row">
        <label for="username" class="col-sm-2 col-form-label">Username</label>
        <div class="col-sm-10">
            <input type="text" @bind="authRequest!.NombreUsuario" class=" form-control" id="username" placeholder="Username">
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <input type="password" @bind="authRequest!.Contrasena" class="form-control" id="password"
                   placeholder="Password">
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
    </div>
</EditForm>

@code {
    private AuthRequest? authRequest = new AuthRequest();
    private async void HandleValidSubmit()
    {
        var authResponse = await AuthService.Login(authRequest!);
        if (authResponse != null)
        {
            await SessionStorage.SetItemAsync("token", authResponse.value);
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).AuthenticateUser(authResponse.value!);
            NavigationManager.NavigateTo("/listaVuelos/1");
        }
    }
}